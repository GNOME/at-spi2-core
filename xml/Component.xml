<?xml version="1.0" encoding="UTF-8"?>
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      org.a11y.atspi.Component:
      @short_description: Interface for GUI components like widgets or other visible elements.
  -->
  <interface name="org.a11y.atspi.Component">

    <!--
        Contains:
        @x: X coordinate of point.
        @y: Y coordinate of point.
        @coord_type: Whether the coordinates are relative to the screen or to the
        component's top level window; see the description.

        Queries whether a point (x, y) is inside the component.

        The @coord_type values are as follows, and correspond to AtkCoordType:

        0 - Coordinates are relative to the screen.
        1 - Coordinates are relative to the component's toplevel window.
        2 - Coordinates are relative to the component's immediate parent.
    -->
    <method name="Contains">
      <arg direction="in" name="x" type="i"/>
      <arg direction="in" name="y" type="i"/>
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" type="b"/>
    </method>

    <!--
        GetAccessibleAtPoint:
        @x: X coordinate of point.
        @y: Y coordinate of point.
        @coord_type: Whether the coordinates are relative to the screen or to the
        component's top level window; see the description.

        Gets a reference to the accessible object that contains an (x, y) pair of
        coordinates.

        The @coord_type values are as follows, and correspond to AtkCoordType:

        0 - Coordinates are relative to the screen.
        1 - Coordinates are relative to the component's toplevel window.
        2 - Coordinates are relative to the component's immediate parent.

        Returns: A DBus name and object reference (so) for the sought object, or a null
        object reference "/org/a11y/atspi/null" if there is no object at the specified
        coordinates.
    -->
    <method name="GetAccessibleAtPoint">
      <arg direction="in" name="x" type="i"/>
      <arg direction="in" name="y" type="i"/>
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" type="(so)"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QSpiObjectReference"/>
    </method>

    <method name="GetExtents">
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" type="(iiii)"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QSpiRect"/>
    </method>

    <method name="GetPosition">
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" name="x" type="i"/>
      <arg direction="out" name="y" type="i"/>
    </method>

    <method name="GetSize">
      <arg direction="out" name="width" type="i"/>
      <arg direction="out" name="height" type="i"/>
    </method>

    <method name="GetLayer">
      <arg direction="out" type="u"/>
    </method>

    <method name="GetMDIZOrder">
      <arg direction="out" type="n"/>
    </method>

    <method name="GrabFocus">
      <arg direction="out" type="b"/>
    </method>

    <method name="GetAlpha">
      <arg direction="out" type="d"/>
    </method>

    <method name="SetExtents">
      <arg direction="in" name="x" type="i"/>
      <arg direction="in" name="y" type="i"/>
      <arg direction="in" name="width" type="i"/>
      <arg direction="in" name="height" type="i"/>
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" type="b"/>
    </method>

    <method name="SetPosition">
      <arg direction="in" name="x" type="i"/>
      <arg direction="in" name="y" type="i"/>
      <arg direction="in" name="coord_type" type="u"/>
      <arg direction="out" type="b"/>
    </method>

    <method name="SetSize">
      <arg direction="in" name="width" type="i"/>
      <arg direction="in" name="height" type="i"/>
      <arg direction="out" type="b"/>
    </method>

    <method name="ScrollTo">
      <arg direction="in" name="type" type="u"/>
      <arg direction="out" type="b"/>
    </method>

    <method name="ScrollToPoint">
      <arg direction="in" name="type" type="u"/>
      <arg direction="in" name="x" type="i"/>
      <arg direction="in" name="y" type="i"/>
      <arg direction="out" type="b"/>
    </method>

  </interface>
</node>
